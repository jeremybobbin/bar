#!/bin/sh
SEGMENTS="$HOME/.local/var/bar"
PROGS="$HOME/.local/bin/bar.d"
pids="$(mktemp)"
n=50

mkdir -p "$SEGMENTS" "$PROGS"

# ignore INT & TERM - only children should it
trap "kill -s TERM $$" INT

if [ -f $HOME/.config/bar ]; then
	cat $HOME/.config/bar
else
	cat <<- EOF
		mail
		music
		memory
		date
		time
	EOF
fi | while read prg; do
	# each "base" program should hang until another invocation is needed
	# other programs will have to manage their own
	out="$SEGMENTS/$((n++))-$prg"
	touch $out
	(
		while "$PROGS/$prg"; do
			:
		done | while read line; do
			# this second while loop is necessary
			# for processes that take time to complete
			echo "$line" > "$out"
		done; rm "$out"
	) & echo $! >> "$pids"
done

# each time one of the segment files is updated, concat the bar segments
while cat "${SEGMENTS:-"$HOME/.local/var/bar"}"/* |
	awk '/^$/ { next } !s { s=$0; next } { s = s " | " $0 } END { print s }'; do
		inotifywait -e CREATE,MOVED_FROM,DELETE,MODIFY "$SEGMENTS" >/dev/null 2>&1
	done

while read pid; do
	wait "$pid"
done < "$pids"

rm "$pids"
